# automatically generated by the FlatBuffers compiler, do not modify

# namespace: imu0

import flatbuffers

class IMU0(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAsIMU0(cls, buf, offset):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = IMU0()
        x.Init(buf, n + offset)
        return x

    # IMU0
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # IMU0
    def Type(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # IMU0
    def X(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # IMU0
    def Y(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # IMU0
    def Z(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

    # IMU0
    def W(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Float64Flags, o + self._tab.Pos)
        return 0.0

def IMU0Start(builder): builder.StartObject(5)
def IMU0AddType(builder, type): builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(type), 0)
def IMU0AddX(builder, x): builder.PrependFloat64Slot(1, x, 0.0)
def IMU0AddY(builder, y): builder.PrependFloat64Slot(2, y, 0.0)
def IMU0AddZ(builder, z): builder.PrependFloat64Slot(3, z, 0.0)
def IMU0AddW(builder, w): builder.PrependFloat64Slot(4, w, 0.0)
def IMU0End(builder): return builder.EndObject()
